{
	"compilerOptions": {
		"target": "es6",
		"lib": ["es6"],
		"module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
		"allowJs": true /* Allow javascript files to be compiled. */,
		"outDir": "./dist" /* Redirect output structure to the directory. */,
		"rootDir": "./src" /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
		"downlevelIteration": true /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */,
		"strict": true /* Enable all strict type-checking options. */,
		"noImplicitAny": false /* Raise error on expressions and declarations with an implied 'any' type. */,
		"moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
		"baseUrl": "./src" /* Base directory to resolve non-absolute module names. */,
		"paths": {
			"@/*": ["./*"]
		} /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */,
		"allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
		"esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
		"skipLibCheck": true /* Skip type checking of declaration files. */,
		"forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
		"resolveJsonModule": true
	},
	"include": ["src/**/*"],
	"exclude": ["dist", "node_modules"]
}
